//输出4×5矩阵
#include<stdio.h>
int main()
{
	int i,j;
	int n;
	for(i = 1; i <= 4;i++)
	{
		for(j = 1; j <= 5;j++,n++)   //n++有与没有输出格式不一样？ 
		{
			//n = n + 1;        //这句有与没有输出格式不一样？    11和15，同一句话，位置不同，输出格式不同
			if(n % 5 == 0) 
			printf("\n");    //该行为什么会对结果产生影响？ 
			printf("%d\t",i * j);
			//n = n + 1;       //与n++输出格式一致 
		}
	}
	//printf("\n");   //此行有与没有无影响 
	return 0;
}
//输出3×4矩阵--指针
#if(0)
#include<stdio.h>
int main()
{
	//int a[3][4] = { 1,2,3,4,5,6,7,8,9,10,11,12 };
	int a[3][4];
	int* p;
	printf("please input 12 numbers:");
	for (p = a[0]; p < a[0] + 12; p++)    //输入12个数
		scanf_s("%d", p);
	for (p = a[0]; p < a[0] + 12; p++)    //是p依次指向下一个元素
	{
		if ((p - a[0]) % 4 == 0)          //p移动4次后换行（也可以是3次换行）
		{
			printf("\n");
		}
		printf("%d\t", *p);
	}
	return 0;
}
#endif

*************************************************************************************************

//二维数组行列互换 （2行3列）数字可改
#include<stdio.h>
int main()
{
	int a[2][3];     //int a[2][3] = {{1,2,3},{4,5,6}}; 
	int b[3][2],i,j;
	printf("please input six numbers:");
	for(i = 0;i < 2;i++)    //循环输入 
	{
		for(j = 0;j < 3;j++)
		{
			scanf("%d",&a[i][j]);
		}
	}
	//scanf("%d",&a[i][j]);
	printf("array a:\n");
	for(i = 0;i < 2;i++)
	{
		for(j = 0;j < 3;j++)
		{
			b[j][i] = a[i][j];      //a与b互换只能在a的循环里换，在b循环里换，i、j超标
			printf("%d\t",a[i][j]);
		}
		printf("\n");     //输出矩阵格式 
	}
	printf("array b:\n");
	for(i = 0;i < 3;i++)
	{
		for(j = 0;j < 2;j++)
		{
			printf("%d\t",b[i][j]);
		}
		printf("\n");
	}
	return 0;
 } 
//行列互换    函数写法
#include<stdio.h>
int main()
{
	void fac(int a[3][3], int b[3][3]);
	//int a[3][3] = { {1,2,3},{4,5,6},{7,8,9} };
	int a[3][3];
	int b[3][3], i, j;
	printf("please input 9 numbers:");
	for (i = 0; i < 3; i++)
	{
		for (j = 0; j < 3; j++)
		{
			scanf_s("%d", &a[i][j]);
		}
	}
	fac(a, b);
	for (i = 0; i < 3; i++)
	{
		for (j = 0; j < 3; j++)
		{
			printf("%d\t", b[i][j]);
		}
		printf("\n");
	}
	return 0;
}

void fac(int a[3][3], int b[3][3])
{
	int i, j;
	for (i = 0; i < 3; i++)
	{
		for (j = 0; j < 3; j++)
		{
			b[j][i] = a[i][j];
		}
	}
}

*************************************************************************************

//求数组（矩阵）里最大值，并输出行数和列数（打擂台法） 
#include<stdio.h>
int main()
{
	int a[4][5];    //4行5列，数字可改 
	int i,j,max;
	int row = 0,colum = 0;
	printf("please input 20 numbers:\n");
	for(i = 0;i < 4;i++)
	{
		for(j = 0;j < 5;j++)
		{
			scanf("%d",&a[i][j]);
		}
	}
	max = a[0][0];        //定义的，相当于站在擂台上的那个人
	for(i = 0;i < 4;i++)     //打擂台法核心(类似冒泡法) 冒泡法： for(j = 0;j < 5;j++)
	{
		for(j = 0;j < 5;j++)                                   //for(i = 0;i < 5-j;i++)
		{
			if(a[i][j] > max)                                  //if(a[i] > a[i+1])
			{
				max = a[i][j];                                 //t = a[i]
				row = i;                                       //a[i] = a[i+1]
				colum = j;                                     //a[i+1] = t
			}
		}
	}
	printf("max = %d\trow = %d\tcolum = %d\t",max,row,colum);
	return 0;
 } 
//求数组（矩阵）里最大值，并输出行数和列数（打擂台法）      函数写法（函数中，return只能返回一个值）
#include<stdio.h>
//int Row = 0,Colum = 0;      //定义全局变量
#define I 3
#define J 4
int main()
{
	int max_value(int a[I][J]);
	int max_row(int a[I][J]);
	int max_colum(int a[I][J]);
	int i, j;
	//int row = 0, colum = 0;
	int a[I][J];
	printf("please input 12 numbers:");
	for (i = 0; i < I; i++)
	{
		for (j = 0; j < J; j++)
		{
			scanf_s("%d", &a[i][j]);
		}
	}
	printf("the max value is:%d\n", max_value(a));
	printf("row = %d\ncolum = %d\n", max_row(a),max_colum(a));
	//printf("max = %d\nrow = %d\ncolum = %d",max_value(a),Row,Colum);       //全局变量写法输出语句
	return 0;
}

int max_value(int a[I][J])
{
	int max, i, j;
	max = a[0][0];
	for (i = 0; i < I; i++)
	{
		for (j = 0; j < J; j++)
		{
			if (max < a[i][j])          //当max > a[i][j]时，则是求最小值
			{
				max = a[i][j];
				//Row = i;          //全局变量写法，定义全局变量后，只需这两句就可以搞定row && colum，不需要max_row && max_colum函数
				//Colum = j;
			}
		}
	}
	return(max);
}

int max_row(int a[I][J])
{
	int max, i, j;
	int row = 0, colum = 0;
	max = a[0][0];
	for (i = 0; i < I; i++)
	{
		for (j = 0; j < J; j++)
		{
			if (max < a[i][j])
			{
				//max = a[i][j];
				row = i;
				//colum = j;
			}
		}
	}
	return(row);
}

int max_colum(int a[I][J])
{
	int max, i, j;
	int row = 0, colum = 0;
	max = a[0][0];
	for (i = 0; i < I; i++)
	{
		for (j = 0; j < J; j++)
		{
			if (max < a[i][j])
			{
				//max = a[i][j];
				//row = i;
				colum = j;
			}
		}
	}
	return(colum);
}

*************************************************************************************
//倒叙输出数组
C++:
#if(0)
//三个for循环，第一for用来输入，第二个for用来互换，第三个for用来输出 
#include<iostream>
#include<windows.h>
using namespace std;
int main()
{
	SetConsoleTitle("2020.7.23 C++");
	const int n = 5;
	int i,t,m,a[n];
	cout << "input 5 numbers:";
	for(i = 0;i < n;i++)
	{
		cin >> a[i];
	}
	m = n / 2;       //中位数 
	for(i = 0;i < m;i++)      //中位数前几位数与后几位互换    即  a[i]  与  a[n-i-1]   互换 
	{
		t = a[i];
		a[i] = a[n - i - 1];
		a[n - i - 1] = t;
	}
	for(i = 0;i < n;i++)
	{
		cout << a[i] << "\t";
	}
	cout << endl;
	return 0;
}
#endif

//倒叙输出数组（一般函数写法） 
#if(0)
#include<stdio.h>
int main()
{
	void inv(int a[],int n);
	int i,x[10] = {0,1,2,3,4,5,6,7,8,9};
	printf("the numbers:");
	for(i = 0;i < 10;i++)
	{
		printf("%d\t",x[i]);
	}
	inv(x,10);
	printf("\n");
	printf("the inv numbers:");
	for(i = 0;i < 10;i++)
	{
		printf("%d\t",x[i]);
	}
	return 0;
 } 

void inv(int a[],int n)
{
	int i,j,t,m;
	m = (n - 1) / 2;    //中位数 
	for(i = 0;i < m;i++)
	{
		j = n - 1 - i;    //最后一位数 
		t = a[i];
		a[i] = a[j];
		a[j] = t;
	}
}
#endif

//指针写法 
//指针变量做形参           
#if(0)
#include<stdio.h>
int main()           //指针变量做形参，主函数跟一般写法一样，倒序函数用指针 
{
	void inv(int *a,int n);
	int i,x[10] = {0,1,2,3,4,5,6,7,8,9};
	printf("the numbers:");
	for(i = 0;i < 10;i++)
	{
		printf("%d\t",x[i]);
	}
	inv(x,10);
	printf("\n");
	printf("the inv numbers:");
	for(i = 0;i < 10;i++)
	{
		printf("%d\t",x[i]);
	}
	return 0;
}

void inv(int *a,int n)
{
	int *i,*j,*p,t,m = (n-1)/2;
	i = a;         // 第一个元素的地址 
	j = a + n - 1;  //最后一个元素的地址 
	p = a + m;      //中位数的地址 
	for(;i < p;i++,j--)    //i < 中位数，i往上加，j往下减 
	{
		t = *i;    //以下i、j的值互换 
		*i = *j;
		*j = t;
	}
}
#endif

//指针写法 
//指针变量做实参
#include<stdio.h>
int main()                  //指针变量做形参，主函数用指针，倒序函数也用指针
{
	void inv(int *x,int n);
	int i,*p;
	int a[10];
	//int a[10] = {0,1,2,3,4,5,6,7,8,9};         //不能写成 int a[10];a[10] = {0,1,2,3,4,5,6,7,8,9}; 
	printf("please input 10 numbers:");
	for(p = a;p < a+10;p++)
	{
		scanf("%d",p);    //输入数组a的元素 
	}
	printf("\n");
	p = a;                      //不能少，少了输出结果不对         指针重新指向a[0] 
	printf("the numbers:");
	for(p = a;p < a+10;p++)
	{
		printf("%d\t",*p);
	}
	p = a;                    //指针重新指向a[0] 
	inv(p,10);                //调用inv函数，实参p是指针变量             写inv（a，10）也对 
	printf("\n");
	printf("the inv numbers:");
	for(p = a;p < a+10;p++)
	{
		printf("%d\t",*p);
	}
	return 0;
}

void inv(int *x,int n)
{
	int *i,*j,*p,t,m = (n-1)/2;
	i = x;
	j = x + n - 1;
	p = x + m;
	for(;i < p;i++,j--)
	{
		t = *i;
		*i = *j;
		*j = t;
	}
}
