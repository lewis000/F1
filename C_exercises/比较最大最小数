 //输出3个数中的最大最小值
 #include<stdio.h>
 int main()
 {
 	int a,b,c,min,max;
 	printf("please input three numbers:");
 	scanf("%d%d%d",&a,&b,&c);
 	max = a > b?a:b;
 	//max = b > c?b:c;
 	max = max > c?max:c;
 	min = a < b?a:b;
 	//min = b < c?b:c;
 	min = min < c?min:c;
 	//min = a < c?a:c;     //把max/min与另一个数比较，可以较快得出结果 
 	printf("max = %d\nmin = %d",max,min);
 	return 0;
  } 
  
  //方法二
   #include<stdio.h>
 int main()
 {
 	int a,b,c,t;
 	printf("please input three numbers:");
 	scanf("%d%d%d",&a,&b,&c);
 	if(a<b)
 	{
 		t = a;
 		a = b;
 		b = t;
	}
	if(a<c)
	{
		t = a;
		a = c;
		c = t;
	}
	if(b<c)
	{
		t = b;
		b = c;
		c = t;
	}
	printf("max = %d\nmin = %d",a,c);
 	return 0;
  } 
  
 //方法三：冒泡法
 #include<stdio.h>
 int main()
 {
 	int i,j,t;
 	int a[3];   //数组  
 	printf("please input three numbers:");    //数字可改,所有的数字都要相应的改 
 	for(i = 0;i < 3;i++)      //以下两句循环输入 
 		scanf("%d",&a[i]);
 	for(j = 0;j<2;j++)      //冒泡法的核心              j的范围一定要比数组值少一      
 	{
 		for(i = 0;i < 2 - j;i++)    //i是数组下标，j是大循环 
 		{
 			if(a[i] > a[i+1])
 			{
 				t = a[i];
 				a[i] = a[i+1];
 				a[i+1] = t;
			 }
		 }
	 }
	printf("从小到大顺序:\n");
	for(i = 0;i < 3;i++)     //以下两句循环输出 
		printf("%d\t",a[i]);
  printf("\n");
	printf("max = %d",a[2]);   //冒泡法最大值是数组最后一个数据,最小值是第一个数据
 	return 0;
 }



//方法四：选择法排序
/*选择法排序总的思路是：
1、找出一个最小数，交换到最前面。
2、在剩下的数里面，再找一个最小的，交换到剩下数的最前面
3、重复步骤2 ，直到所有数都已排好。
显然，对于含有N个数的数组来说，其过程也要进行N - 1趟(0 <= i < N - 1)。
上面所述步骤中，“找出一个最小数，交换到最前面”的方法是：
先将剩下数中的第一个数（序号是i）作为擂主，用变量k记下其序号，
后面的数依次与擂主（注意：擂主是a[k]，不总是a[i]）比较，
若比擂主还小，则用k记下其序号（注意：此时不要交换），当所有数都与擂主比较后，k中存放的就是最小数的序号，
然后将它交换到最前面（现在才交换）。在上面的过程中，数据只交换了一次，即每趟只交换一次数据。*/
#include<stdio.h>
#define N 10
int main()
{
	int a[N] = {10,6,2,4,98,1,3,44,11,13};
	int i, j, k, t;
	for (i = 0; i < N-1; i++)
	{
		k = i;         //a[k]为擂主，先定义擂主下标为i（擂主是k）
		for (j = i + 1; j <= N-1; j++)   //剩下的数里找最小的
		{
			if (a[j] < a[k])   //k是最小的标记
			{
				k = j;
			}
		}
		t = a[i];   //以下三行代码进行排序
		a[i] = a[k];
		a[k] = t;
	}
	for (i = 0; i < N; i++)
		printf("%d\t", a[i]);
	return 0;
}
