//有五名选手，十个评委打分，去掉最高分和最低分，取平均分
#include<iostream>
#include<string>
#include<vector>
#include<deque>
#include<algorithm>
#include<ctime>
using namespace std;

//选手类
class Person
{
public:
	Person(string name, int score)
	{
		this->m_name = name;
		this->m_score = score;
	}


	string m_name;   //姓名
	int m_score;    //平均分
};

void creatPerson(vector<Person>& v)
{
	string nameseed = "ABCDE";
	for (int i = 0; i < 5; i++)
	{
		string name = "选手_";
		name += nameseed[i];

		int score = 0;

		Person p(name, score);
		//将创建的Person对象放入到容器中
		v.push_back(p);
	}
}
//打分
void setScore(vector<Person>& v)
{
	for (vector<Person>::iterator it = v.begin(); it != v.end(); it++)
	{
		//奖评委的分数，放到deque容器中
		deque<int>d;
		for (int i = 0; i < 10; i++)
		{
			int score = rand() % 41 + 60;   //随机分数60~100
			d.push_back(score);
		}

		/*cout << "选手_" << it->m_name << " 分数：" << it->m_score << endl;
		for (deque<int>::iterator dit = d.begin(); dit != d.end(); dit++)
		{
			cout << *dit << " ";
		}
		cout << endl;*/

		//排序
		sort(d.begin(), d.end());

		//去除最高分和最低分
		d.pop_back();
		d.pop_front();

		//取平均分
		int sum = 0;
		for (deque<int>::iterator dit = d.begin(); dit != d.end(); dit++)
		{
			sum += (*dit);   //累加每个评委的分数

		}

		int avg = sum / d.size();

		//将平均分赋值给选手
		it->m_score = avg;
	}
}

void showScore(vector<Person>& v)
{
	for (vector<Person>::iterator it = v.begin(); it != v.end(); it++)
	{
		cout << it->m_name << " 分数：" << it->m_score << endl;
	}
}

int main()
{
	//随机数种子
	srand((unsigned int)time(NULL));

	//1.创建5名选手
	vector<Person>v;   //存放选手容器
	creatPerson(v);
	//测试
	/*for (vector<Person>::iterator it = v.begin(); it != v.end(); it++)
	{
		cout << "姓名：" << (*it).m_name << " 分数：" << (*it).m_score << endl;
	}*/

	//2.给选手打分
	setScore(v);

	//3.显示分数
	showScore(v);
	return 0;
}
